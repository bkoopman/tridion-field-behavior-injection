<?xml version="1.0"?>
<!-- This is a bare configuration for a Tridion.Web editor -->
<Configuration xmlns="http://www.sdltridion.com/2009/GUI/Configuration/Merge" xmlns:cfg="http://www.sdltridion.com/2009/GUI/Configuration" xmlns:ext="http://www.sdltridion.com/2009/GUI/extensions" xmlns:cmenu="http://www.sdltridion.com/2009/GUI/extensions/ContextMenu">
  <!--
		The SDL Tridion GUI uses a merging technique to minimize the amount of calls done by the client
		for static files (like .css and .js file).
		The files can be grouped and will be merged per group (if merging is enabled on the group)
		For debugging purposes the merging behavior can be switched off by setting the merge attribute to false.
	-->
  <resources cache="true">
    <cfg:filters />
    <cfg:extensiongroups/>      
    
    <cfg:groups>

      <!-- Resources for the Component Tab-->
      <cfg:group name="Tridion.Extensions.UI.FBI.ComponentTab">
        <cfg:fileset>
          <cfg:file type="script">/Extensions/ComponentTab/ComponentTab.ascx.js</cfg:file>
          <cfg:file type="style">/Extensions/ComponentTab/ComponentTab.ascx.css</cfg:file>
          <!-- Behaviours -->
          <cfg:file type="script">/Extensions/SchemaFieldReadOnly/ReadOnlyBehaviour.js</cfg:file>
          <cfg:file type="script">/Extensions/SchemaFieldVisibility/VisibilityBehaviour.js</cfg:file>
        </cfg:fileset>
        
      </cfg:group>      
      
      <!-- Read Only Behaviour -->
      <cfg:group name="Tridion.Extensions.UI.FBI.SchemaFieldBehaviour">
        <cfg:fileset>
          <cfg:file type="script">/Extensions/SchemaFieldBehaviour.ascx.js</cfg:file>
          <cfg:file type="style">/Extensions/SchemaFieldBehaviour.ascx.css</cfg:file>
        </cfg:fileset>
        <cfg:dependencies>
          <cfg:dependency>Tridion.Web.UI.Editors.CME</cfg:dependency>
        </cfg:dependencies>
      </cfg:group>
      
      
      <!-- Schema Field ReadOnly -->
      <cfg:group name="Tridion.Extensions.UI.FBI.SchemaFieldReadonly">
        <cfg:fileset>
          <cfg:file type="script">/Extensions/SchemaFieldReadOnly/SchemaFieldReadonly.ascx.js</cfg:file>
        </cfg:fileset>
        <cfg:dependencies>
          <cfg:dependency>Tridion.Web.UI.Editors.CME</cfg:dependency>
        </cfg:dependencies>
      </cfg:group>


      <!-- Schema Field Visiblity  -->
      <cfg:group name="Tridion.Extensions.UI.FBI.SchemaFieldVisibility">
        <cfg:fileset>
          <cfg:file type="script">/Extensions/SchemaFieldVisibility/SchemaFieldVisible.ascx.js</cfg:file>
        </cfg:fileset>
        <cfg:dependencies>
          <cfg:dependency>Tridion.Web.UI.Editors.CME</cfg:dependency>
        </cfg:dependencies>
      </cfg:group>

      <!-- Validation -->
      <cfg:group name="Tridion.Extensions.UI.FBI.SchemaFieldValidation">
        <cfg:fileset>
          <cfg:file type="script">/Extensions/SchemaFieldValidation/SchemaFieldValidation.ascx.js</cfg:file>
        </cfg:fileset>
        <cfg:dependencies>
          <cfg:dependency>Tridion.Web.UI.Editors.CME</cfg:dependency>
        </cfg:dependencies>
      </cfg:group>
      
      
      <cfg:group name="Tridion.Extensions.FBI.Commands">
        <cfg:fileset>
          <cfg:file type="reference">FBI.Commandset</cfg:file>
        </cfg:fileset>
      </cfg:group>
      <cfg:group name="Tridion.Extensions.UI.FBI.Implementation">
        <cfg:fileset>
          <cfg:file type="script">/Scripts/Commands.js</cfg:file>          
        </cfg:fileset>
        <cfg:dependencies>
          <cfg:dependency>Tridion.Web.UI.Editors.CME</cfg:dependency>
          <cfg:dependency>Tridion.Web.UI.Editors.CME.commands</cfg:dependency>
        </cfg:dependencies>
      </cfg:group>
    </cfg:groups>
    </resources>
  <definitionfiles>
    <!-- List definitions -->
  </definitionfiles>
  <!--
		The SDL Tridion GUI allows for additions, manipulations and removal of items within the GUI through
		the 'extension methodology'.

		Below is the configuration section for those extensions.
		These configuration sections can be defined inline or external (if the externaldefinition is used, all
		inline content is ignored!)
	-->
  <extensions>
    <ext:editorextensions>
      <!-- CME Extensions -->
      <ext:editorextension target="CME">
        <ext:editurls />
        <ext:listdefinitions />
        <ext:taskbars />
        <ext:commands />
        <ext:commandextensions>
              <!--
          <ext:commands>
            <ext:command name="CheckIn" extendingcommand="ValidationCheckIn" />
            <ext:command name="SaveNew" extendingcommand="ValidationSaveNew" />
            <ext:command name="SaveClose" extendingcommand="ValidationSaveClose" />
            <ext:command name="Save" extendingcommand="ValidationSave" />
          </ext:commands > 
          <ext:dependencies>
            <cfg:dependency>Tridion.Extensions.FBI.Commands</cfg:dependency>
          </ext:dependencies>-->
            </ext:commandextensions>
        <ext:contextmenus/>
        <ext:lists />
        <ext:tabpages>

          <!--- Behaviour Tab -->          
          <ext:add>
            <ext:extension assignid="FBIComponentTab" name="Field Behaviours">
              <ext:control>~/Extensions/ComponentTab/ComponentTab.ascx</ext:control>
              <ext:pagetype>FBIComponentTab</ext:pagetype>
              <ext:apply>
                <ext:view name="ComponentView">
                  <ext:control id="MasterTabControl" />
                </ext:view>
              </ext:apply>
            </ext:extension>
          </ext:add>
          
        </ext:tabpages>
        <ext:toolbars />
        <ext:ribbontoolbars/>
        <ext:extendedareas>
          <ext:add>
            <!--
            <ext:extension assignid="SchemaFieldValidation" name="SchemaFieldValidation">
              <ext:control>~/Extensions/SchemaFieldValidation/SchemaFieldValidation.ascx</ext:control>
              <ext:pagetype />
              <ext:apply>
                <ext:view name="SchemaView">
                  <ext:container name="SchemaDesignFieldDesigner">
                    <ext:control id="AfterMandatory" />
                  </ext:container>
                </ext:view>
              </ext:apply>
            </ext:extension>
            <ext:extension assignid="metadata_SchemaFieldValidation" name="metadata_SchemaFieldValidation">
              <ext:control>~/Extensions/SchemaFieldValidation/SchemaFieldValidation.ascx</ext:control>
              <ext:pagetype />
              <ext:apply>
                <ext:view name="SchemaView">
                  <ext:container name="MetadataDesignFieldDesigner">
                    <ext:control id="AfterMandatory" />
                  </ext:container>
                </ext:view>
              </ext:apply>
            </ext:extension>
            -->
            <!-- Behaviour  -->
            <ext:extension assignid="SchemaFieldBehaviour" name="SchemaFieldBehaviour">
              <ext:control>~/Extensions/SchemaFieldBehaviour.ascx</ext:control>
              <ext:pagetype />
              <ext:apply>
                <ext:view name="SchemaView">
                  <ext:container name="SchemaDesignFieldDesigner">
                    <ext:control id="AfterMandatory" />
                  </ext:container>
                </ext:view>
              </ext:apply>
            </ext:extension>
            <ext:extension assignid="metadata_SchemaFieldBehaviour" name="metadata_SchemaFieldBehaviour">
              <ext:control>~/Extensions/SchemaFieldBehaviour.ascx</ext:control>
              <ext:pagetype />
              <ext:apply>
                <ext:view name="SchemaView">
                  <ext:container name="MetadataDesignFieldDesigner">
                    <ext:control id="AfterMandatory" />
                  </ext:container>
                </ext:view>
              </ext:apply>
            </ext:extension>

            <!-- Read-only Behaviour  -->
            <ext:extension assignid="SchemaFieldReadOnly" name="SchemaFieldReadonly">
              <ext:control>~/Extensions/SchemaFieldReadOnly/SchemaFieldReadOnly.ascx</ext:control>
              <ext:pagetype />
              <ext:apply>
                <ext:view name="SchemaView">
                  <ext:container name="SchemaFieldBehaviour">
                    <ext:control id="BehavioursArea" />
                  </ext:container>
                </ext:view>
              </ext:apply>
            </ext:extension>

            <!-- Read-only Behaviour Metadata -->
            <ext:extension assignid="MDSchemaFieldReadOnly" name="MDSchemaFieldReadonly">
              <ext:control>~/Extensions/SchemaFieldReadOnly/SchemaFieldReadOnly.ascx</ext:control>
              <ext:pagetype />
              <ext:apply>
                <ext:view name="SchemaView">
                  <ext:container name="metadata_SchemaFieldBehaviour">
                    <ext:control id="BehavioursArea" />
                  </ext:container>
                </ext:view>
              </ext:apply>
            </ext:extension>


            <!-- Visibility Behaviour  -->
            <ext:extension assignid="SchemaFieldVisbility" name="SchemaFieldReadonly">
              <ext:control>~/Extensions/SchemaFieldVisibility/SchemaFieldVisibility.ascx</ext:control>
              <ext:pagetype />
              <ext:apply>
                <ext:view name="SchemaView">
                  <ext:container name="SchemaFieldBehaviour">
                    <ext:control id="BehavioursArea" />
                  </ext:container>
                </ext:view>
              </ext:apply>
            </ext:extension>

            <!-- Visibility Behaviour Metadata -->
            <ext:extension assignid="MDSchemaFieldVisibility" name="MDSchemaFieldReadonly">
              <ext:control>~/Extensions/SchemaFieldVisibility/SchemaFieldVisivility.ascx</ext:control>
              <ext:pagetype />
              <ext:apply>
                <ext:view name="SchemaView">
                  <ext:container name="metadata_SchemaFieldBehaviour">
                    <ext:control id="BehavioursArea" />
                  </ext:container>
                </ext:view>
              </ext:apply>
            </ext:extension>
            
          </ext:add>
        </ext:extendedareas>
      </ext:editorextension>
    </ext:editorextensions>
    <ext:dataextenders />
    <ext:resourceextensions />
  </extensions>
  <!--
		The SDL Tridion GUI uses a 'Command' pattern for the commands executed whenever a user
		interacts with the system.

		Below are all the available commands specified and the file that holds the actual implementation of that command.
	-->
  <commands>
    <cfg:commandset id="FBI.Commandset">
      <cfg:command name="ValidationSave" implementation="Tridion.Extensions.FBI.Commands.ValidationSave"/>
      <cfg:command name="ValidationSaveNew" implementation="Tridion.Extensions.FBI.Commands.ValidationSaveNew"/>
      <cfg:command name="ValidationSaveClose" implementation="Tridion.Extensions.FBI.Commands.ValidationSaveClose"/>
      <cfg:command name="ValidationCheckIn" implementation="Tridion.Extensions.FBI.Commands.ValidationCheckIn"/>
      <cfg:dependencies>
        <cfg:dependency>Tridion.Extensions.UI.FBI.Implementation</cfg:dependency>
      </cfg:dependencies>
    </cfg:commandset>
  </commands>
  <!--
		The SDL Tridion GUI allows for context menu's to have 'external definitions', which can be used by referencing
		their configuration name in the views (aspx page)
		Below are the standard context menus as delivered by SDL Tridion
	-->
  <contextmenus />
  <widgetsviews />
  <localization>
    <cfg:clientresource clientname="Tridion.Extensions.UI.FBI.Strings" servertype="Tridion.Extensions.UI.FBI.Editor.resources.Tridion.Extensions.UI.FBI.Strings, Tridion.Extensions.UI.FBI.Editor"/>
  </localization>
  <settings>
    <dependencies>
      <editor>CME</editor>
    </dependencies>
    <defaultpage>
    </defaultpage>
    <editurls>
    </editurls>
    <listdefinitions/>
    <itemicons />
    <theme>
      <path>/Themes/</path>
    </theme>
    <resourceextensions/>
    <customconfiguration>
      <clientconfiguration xmlns="http://www.sdltridion.com/2009/GUI/Configuration/Merge">
        <!-- Variables settings START -->
        <behaviour xmlns="http://www.sdltridion.com/2009/GUI/Configuration/Merge" name="readonly" handler="Tridion.Extensions.UI.FBI.Behaviours.ReadOnlyBehaviour"/>
        <behaviour xmlns="http://www.sdltridion.com/2009/GUI/Configuration/Merge" name="visible" handler="Tridion.Extensions.UI.FBI.Behaviours.ReadOnlyBehaviour"/>
      </clientconfiguration>
    </customconfiguration>
  </settings>
</Configuration>

